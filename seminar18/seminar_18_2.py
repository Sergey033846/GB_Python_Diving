# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1. 
# üìå –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä. 
# üìå –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é-—É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10]. 
# üìå –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.


from typing import Callable
import random as rnd


def enter_and_check_number_and_attempts(func: Callable):        
    def wrapper(*args, **kwargs):
        number, attempts, *_ = args        
        if not 1 <= number <= 100:
            number = rnd.randint(1, 100)
        if not 1 <= attempts <= 10:
            attempts = rnd.randint(1, 10)
        print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {number}')        # –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        print(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: {attempts}')
        
        func(number, attempts)        
                        
    return wrapper


@enter_and_check_number_and_attempts
def guessing(number, attempts):                
    attempt = 1        
    while attempt <= attempts:
        yournumber = int(input(f'–ü–æ–ø—ã—Ç–∫–∞ –Ω–æ–º–µ—Ä {attempt}. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: '))
        if (yournumber > number):
            print('–ú–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ')
        elif (yournumber < number):
            print('–ú–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ')
        elif (yournumber == number):
            print(f'–í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ —Å {attempt} –ø–æ–ø—ã—Ç–∫–∏!')
            break 
        attempt += 1
    else:
        print('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –í–∞—à–∏ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å.')


#number_ = int(input('–ó–∞–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ (–æ—Ç 1 –¥–æ 100): '))
#attempts_ = int(input('–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ (–æ—Ç 1 –¥–æ 10): '))    
#guessing(number_, attempts_)
guessing(23, 3)
