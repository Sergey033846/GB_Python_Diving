# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è, –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7). 
# üìå –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–π–ª. 
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
# üìå –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏. 
# üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞. 
# üìå –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.


import json


def creating_access_database(file_json): 
    access_dict = dict()
        
    # —á–∏—Ç–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–æ–≤–∞—Ä—å –¥–æ—Å—Ç—É–ø–∞ –∏–∑ —Ñ–∞–π–ª–∞
    with open(file_json, 'r', encoding='utf-8') as fjson:
        access_dict = json.load(fjson)
    print(f'–¢–µ–∫—É—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–∞:\n{access_dict=}\n')    
    
    # –≤–≤–æ–¥–∏–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –≤ —Å–ª–æ–≤–∞—Ä—å, –∑–∞—Ç–µ–º –≤ —Ñ–∞–π–ª
    while True:
        inputstr = input('–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –∏–º—è, –ª–∏—á–Ω—ã–π id –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –æ—Ç 1 –¥–æ 7 ("q" –¥–ª—è –≤—ã—Ö–æ–¥–∞): ')
        if inputstr == 'q':
            break
        else:
            name, user_id, access_level = inputstr.split()
            if 1 <= int(access_level) <= 7:  
                if not any(user_id in dict_level for dict_level in access_dict.values()):
                    if access_level in access_dict:
                        access_dict[access_level][user_id] = name
                    else:                
                        access_dict[access_level] = {user_id: name}
                    
                    with open(file_json, 'w', encoding='utf-8') as fjson:                
                        json.dump(access_dict, fjson, indent=2)
                else:
                    print('–¢–∞–∫–æ–π user_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
            else:
                print('–£–∫–∞–∑–∞–Ω –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (1-7)!')
    
    print(f'–ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–∞:\n{access_dict=}\n')


creating_access_database('seminar16/accessdb.json')
